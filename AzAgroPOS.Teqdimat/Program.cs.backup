using AzAgroPOS.Mentiq.Idareciler;
using AzAgroPOS.Teqdimat.Konfiqurasiya;
using AzAgroPOS.Teqdimat.Teqdimatcilar;
using AzAgroPOS.Verilenler.Interfeysler;
using AzAgroPOS.Verilenler.Kontekst;
using AzAgroPOS.Verilenler.Realizasialar;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

namespace AzAgroPOS.Teqdimat
{
    internal static class Program
    {
        public static IServiceProvider ServiceProvider { get; private set; }

        [STAThread]
        static void Main()
        {
            ApplicationConfiguration.Initialize();

            // Loggeri konfiqurasiya edirik
            AzAgroPOS.Mentiq.Yardimcilar.Logger.KonfiqurasiyaEt();

            try
            {
                var services = new ServiceCollection();
                ConfigureServices(services);
                ServiceProvider = services.BuildServiceProvider();

                var loginFormu = ServiceProvider.GetRequiredService<LoginFormu>();
                loginFormu.ShowDialog();

                if (loginFormu.UgurluDaxilOlundu)
                {
                    var anaMenuFormu = ServiceProvider.GetRequiredService<AnaMenuFormu>();
                    Application.Run(anaMenuFormu);
                }
            }
            catch (Exception ex)
            {
                AzAgroPOS.Mentiq.Yardimcilar.Logger.XetaYaz(ex, "T\u0259tbiq s\u0259viyy\u0259sind\u0259 tutulmayan istisna ba\u015F verdi");
                MessageBox.Show("T\u0259tbiqd\u0259 g\u00F6zl\u0259nilm\u0259y\u0259n x\u0259ta ba\u015F verdi. T\u0259f\u0259rr\u00FCatlar log fayl\u0131na yaz\u0131ld\u0131.", "X\u0259ta", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private static void ConfigureServices(IServiceCollection services)
        {
            // Build configuration
            var builder = new ConfigurationBuilder()
                .SetBasePath(Directory.GetCurrentDirectory())
                .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true);

            IConfiguration configuration = builder.Build();

            // Get connection string from configuration or use fallback
            string connectionString = configuration.GetConnectionString(Sabitler.DefaultConnection) ??
            "Server=.\\SQLEXPRESS;Database=AzAgroPOS_DB;Trusted_Connection=True;TrustServerCertificate=True;";

            services.AddDbContext<AzAgroPOSDbContext>(options =>
                options.UseSqlServer(connectionString), ServiceLifetime.Transient);

            services.AddTransient<IUnitOfWork, UnitOfWork>();

            // Menecerl\u0259r
            services.AddTransient<TehlukesizlikManager>();
            services.AddTransient<IstifadeciManager>();
            services.AddTransient<MehsulManager>();
            services.AddTransient<MehsulMeneceri>(); // \u018Flav\u0259 edildi
            services.AddTransient<MusteriManager>();
            services.AddTransient<SatisManager>();
            services.AddTransient<NisyeManager>();
            services.AddTransient<NovbeManager>();
            services.AddTransient<HesabatManager>();
            services.AddTransient<AnbarManager>();
            services.AddTransient<BarkodCapiManager>();
            services.AddTransient<TemirManager>();
            services.AddTransient<IsciManager>();
            services.AddTransient<AlisManager>();
            services.AddTransient<KateqoriyaMeneceri>(); // \u018Flav\u0259 edildi
            services.AddTransient<BrendMeneceri>(); // \u018Flav\u0259 edildi
            services.AddTransient<TedarukcuMeneceri>(); // \u018Flav\u0259 edildi
            services.AddTransient<KonfiqurasiyaManager>(); // \u018Flav\u0259 edildi
            services.AddTransient<IcazeManager>(); // Əlavə edildi

            // Presenterlər
            services.AddTransient<LoginPresenter>();
            services.AddTransient<MehsulPresenter>();
            services.AddTransient<MusteriPresenter>();
            services.AddTransient<SatisPresenter>();
            services.AddTransient<TemirPresenter>();
            services.AddTransient<QaytarmaPresenter>();

            // Formalar (Bütün formaları buraya əlavə edirik)
            services.AddTransient<LoginFormu>();
            services.AddTransient<AnaMenuFormu>();
            services.AddTransient<IstifadeciIdareetmeFormu>();
            services.AddTransient<AnbarFormu>();
            services.AddTransient<AnbarQaliqHesabatFormu>();
            services.AddTransient<BarkodCapiFormu>();
            services.AddTransient<HesabatFormu>();
            services.AddTransient<MehsulIdareetmeFormu>();
            services.AddTransient<MehsulSatisHesabatFormu>();
            services.AddTransient<MusteriIdareetmeFormu>();
            services.AddTransient<NisyeIdareetmeFormu>();
            services.AddTransient<NovbeIdareetmesiFormu>();
            services.AddTransient<SatisFormu>();
            services.AddTransient<TemirIdareetmeFormu>();
            services.AddTransient<EhtiyatHiss\u0259siFormu>();
            services.AddTransient<ZHesabatArxivFormu>();
            services.AddTransient<TedarukcuIdareetmeFormu>();
            services.AddTransient<IsciIdareetmeFormu>();
            services.AddTransient<QaytarmaFormu>();
            services.AddTransient<QaytarmaPresenter>();
            services.AddTransient<KonfiqurasiyaFormu>(); // \u018Flav\u0259 edildi
        }
    }
}